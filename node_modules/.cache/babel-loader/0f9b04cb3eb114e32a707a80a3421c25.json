{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { deleteObject, getDownloadURL, getStorage, ref, uploadBytesResumable } from \"firebase/storage\";\nimport { useState } from \"react\";\nexport default function useFirebaseImage(setValue, getValues) {\n  _s();\n\n  let imageName = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  let cb = arguments.length > 3 ? arguments[3] : undefined;\n  const [progress, setProgress] = useState(0);\n  const [image, setImage] = useState(\"\");\n  if (!setValue || !getValues) return;\n\n  const handleUploadImage = file => {\n    const storage = getStorage();\n    const storageRef = ref(storage, \"images/\" + file.name);\n    const uploadTask = uploadBytesResumable(storageRef, file);\n    uploadTask.on(\"state_changed\", snapshot => {\n      const progressPercent = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n      setProgress(progressPercent);\n\n      switch (snapshot.state) {\n        case \"paused\":\n          console.log(\"Upload is paused\");\n          break;\n\n        case \"running\":\n          console.log(\"Upload is running\");\n          break;\n\n        default:\n          console.log(\"Nothing at all\");\n      }\n    }, error => {\n      console.log(\"Error\");\n    }, () => {\n      getDownloadURL(uploadTask.snapshot.ref).then(downloadURL => {\n        console.log(\"File available at\", downloadURL);\n        setImage(downloadURL);\n      });\n    });\n  };\n\n  const handleSelectImage = e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    setValue(\"image_name\", file.name);\n    handleUploadImage(file);\n  };\n\n  const handleDeleteImage = () => {\n    const storage = getStorage();\n    const imageRef = ref(storage, \"images/\" + (imageName || getValues(\"image_name\")));\n    deleteObject(imageRef).then(() => {\n      console.log(\"Remove image successfully\");\n      setImage(\"\");\n      setProgress(0);\n    }).catch(error => {\n      console.log(\"handleDeleteImage ~ error\", error);\n      console.log(\"Can not delete image\");\n    });\n  };\n\n  const handleResetUpload = () => {\n    setImage(\"\");\n    setProgress(0);\n    cb && cb();\n  };\n\n  return {\n    image,\n    handleResetUpload,\n    progress,\n    handleSelectImage,\n    handleDeleteImage\n  };\n}\n\n_s(useFirebaseImage, \"rqPjtN4fQ0Uj3mFE4YCbny/RW/U=\");","map":{"version":3,"sources":["E:/KTCity/react-course-project/react-monkey-blogging/src/hooks/useFirebaseImage.js"],"names":["deleteObject","getDownloadURL","getStorage","ref","uploadBytesResumable","useState","useFirebaseImage","setValue","getValues","imageName","cb","progress","setProgress","image","setImage","handleUploadImage","file","storage","storageRef","name","uploadTask","on","snapshot","progressPercent","bytesTransferred","totalBytes","state","console","log","error","then","downloadURL","handleSelectImage","e","target","files","handleDeleteImage","imageRef","catch","handleResetUpload"],"mappings":"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","sourcesContent":["import {\n  deleteObject,\n  getDownloadURL,\n  getStorage,\n  ref,\n  uploadBytesResumable,\n} from \"firebase/storage\";\nimport { useState } from \"react\";\n\nexport default function useFirebaseImage(\n  setValue,\n  getValues,\n  imageName = null,\n  cb\n) {\n  const [progress, setProgress] = useState(0);\n  const [image, setImage] = useState(\"\");\n  if (!setValue || !getValues) return;\n  const handleUploadImage = (file) => {\n    const storage = getStorage();\n    const storageRef = ref(storage, \"images/\" + file.name);\n    const uploadTask = uploadBytesResumable(storageRef, file);\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const progressPercent =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(progressPercent);\n        switch (snapshot.state) {\n          case \"paused\":\n            console.log(\"Upload is paused\");\n            break;\n          case \"running\":\n            console.log(\"Upload is running\");\n            break;\n          default:\n            console.log(\"Nothing at all\");\n        }\n      },\n      (error) => {\n        console.log(\"Error\");\n      },\n      () => {\n        getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n          console.log(\"File available at\", downloadURL);\n          setImage(downloadURL);\n        });\n      }\n    );\n  };\n  const handleSelectImage = (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n    setValue(\"image_name\", file.name);\n    handleUploadImage(file);\n  };\n\n  const handleDeleteImage = () => {\n    const storage = getStorage();\n    const imageRef = ref(\n      storage,\n      \"images/\" + (imageName || getValues(\"image_name\"))\n    );\n    deleteObject(imageRef)\n      .then(() => {\n        console.log(\"Remove image successfully\");\n        setImage(\"\");\n        setProgress(0);\n      })\n      .catch((error) => {\n        console.log(\"handleDeleteImage ~ error\", error);\n        console.log(\"Can not delete image\");\n      });\n  };\n  const handleResetUpload = () => {\n    setImage(\"\");\n    setProgress(0);\n    cb && cb();\n  };\n  return {\n    image,\n    handleResetUpload,\n    progress,\n    handleSelectImage,\n    handleDeleteImage,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}
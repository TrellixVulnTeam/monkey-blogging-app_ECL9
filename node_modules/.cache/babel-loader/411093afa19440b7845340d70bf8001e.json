{"ast":null,"code":"var _jsxFileName = \"E:\\\\KTCity\\\\react-course-project\\\\react-monkey-blogging\\\\src\\\\contexts\\\\auth-context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { auth, db } from \"firebase-app/firebase-config\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { collection, query, where } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  createContext,\n  useContext,\n  useState,\n  useEffect\n} = require(\"react\");\n\nconst AuthContext = createContext();\n\nfunction AuthProvider(props) {\n  _s();\n\n  const [userInfo, setUserInfo] = useState({});\n  const value = {\n    userInfo,\n    setUserInfo\n  };\n  useEffect(() => {\n    onAuthStateChanged(auth, user => {\n      if (user) {\n        const docRef = query(collection(db, \"users\"), where(\"email\", \"==\", user.email));\n        setUserInfo(user);\n      } else {\n        setUserInfo(null);\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 10\n  }, this);\n}\n\n_s(AuthProvider, \"VIh6epXp38Cvo5M0hHpMCn8+NUU=\");\n\n_c = AuthProvider;\n\nfunction useAuth() {\n  _s2();\n\n  const context = useContext(AuthContext);\n  if (typeof context === \"undefined\") throw new Error(\"useAuth must be used within AuthProvider\");\n  return context;\n}\n\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport { AuthProvider, useAuth };\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["E:/KTCity/react-course-project/react-monkey-blogging/src/contexts/auth-context.js"],"names":["auth","db","onAuthStateChanged","collection","query","where","createContext","useContext","useState","useEffect","require","AuthContext","AuthProvider","props","userInfo","setUserInfo","value","user","docRef","email","useAuth","context","Error"],"mappings":";;;;AAAA,SAASA,IAAT,EAAeC,EAAf,QAAyB,8BAAzB;AACA,SAASC,kBAAT,QAAmC,eAAnC;AACA,SAASC,UAAT,EAAqBC,KAArB,EAA4BC,KAA5B,QAAyC,oBAAzC;;;AAEA,MAAM;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA,UAAjB;AAA6BC,EAAAA,QAA7B;AAAuCC,EAAAA;AAAvC,IAAqDC,OAAO,CAAC,OAAD,CAAlE;;AAEA,MAAMC,WAAW,GAAGL,aAAa,EAAjC;;AACA,SAASM,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC3B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMQ,KAAK,GAAG;AAAEF,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAd;AACAN,EAAAA,SAAS,CAAC,MAAM;AACdP,IAAAA,kBAAkB,CAACF,IAAD,EAAQiB,IAAD,IAAU;AACjC,UAAIA,IAAJ,EAAU;AACR,cAAMC,MAAM,GAAGd,KAAK,CAClBD,UAAU,CAACF,EAAD,EAAK,OAAL,CADQ,EAElBI,KAAK,CAAC,OAAD,EAAU,IAAV,EAAgBY,IAAI,CAACE,KAArB,CAFa,CAApB;AAIAJ,QAAAA,WAAW,CAACE,IAAD,CAAX;AACD,OAND,MAMO;AACLF,QAAAA,WAAW,CAAC,IAAD,CAAX;AACD;AACF,KAViB,CAAlB;AAWD,GAZQ,EAYN,EAZM,CAAT;AAaA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,KAA7B;AAAA,OAAwCH;AAAxC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAjBQD,Y;;KAAAA,Y;;AAkBT,SAASQ,OAAT,GAAmB;AAAA;;AACjB,QAAMC,OAAO,GAAGd,UAAU,CAACI,WAAD,CAA1B;AACA,MAAI,OAAOU,OAAP,KAAmB,WAAvB,EACE,MAAM,IAAIC,KAAJ,CAAU,0CAAV,CAAN;AACF,SAAOD,OAAP;AACD;;IALQD,O;;AAMT,SAASR,YAAT,EAAuBQ,OAAvB","sourcesContent":["import { auth, db } from \"firebase-app/firebase-config\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { collection, query, where } from \"firebase/firestore\";\n\nconst { createContext, useContext, useState, useEffect } = require(\"react\");\n\nconst AuthContext = createContext();\nfunction AuthProvider(props) {\n  const [userInfo, setUserInfo] = useState({});\n  const value = { userInfo, setUserInfo };\n  useEffect(() => {\n    onAuthStateChanged(auth, (user) => {\n      if (user) {\n        const docRef = query(\n          collection(db, \"users\"),\n          where(\"email\", \"==\", user.email)\n        );\n        setUserInfo(user);\n      } else {\n        setUserInfo(null);\n      }\n    });\n  }, []);\n  return <AuthContext.Provider value={value} {...props}></AuthContext.Provider>;\n}\nfunction useAuth() {\n  const context = useContext(AuthContext);\n  if (typeof context === \"undefined\")\n    throw new Error(\"useAuth must be used within AuthProvider\");\n  return context;\n}\nexport { AuthProvider, useAuth };\n"]},"metadata":{},"sourceType":"module"}
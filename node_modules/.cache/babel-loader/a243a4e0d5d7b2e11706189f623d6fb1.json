{"ast":null,"code":"var _jsxFileName = \"E:\\\\KTCity\\\\react-course-project\\\\react-monkey-blogging\\\\src\\\\module\\\\post\\\\PostAddNew.js\",\n    _s = $RefreshSig$();\n\nimport useFirebaseImage from \"hooks/useFirebaseImage\";\nimport Toggle from \"components/toggle/Toggle\";\nimport slugify from \"slugify\";\nimport React, { useEffect, useState } from \"react\";\nimport ImageUpload from \"components/image/ImageUpload\";\nimport { useForm } from \"react-hook-form\";\nimport { useAuth } from \"contexts/auth-context\";\nimport { toast } from \"react-toastify\";\nimport { Radio } from \"components/checkbox\";\nimport { postStatus } from \"utils/constants\";\nimport { Label } from \"components/label\";\nimport { Input } from \"components/input\";\nimport { Field, FieldCheckboxes } from \"components/field\";\nimport { Dropdown } from \"components/dropdown\";\nimport { db } from \"firebase-app/firebase-config\";\nimport { Button } from \"components/button\";\nimport { addDoc, collection, doc, getDoc, getDocs, query, serverTimestamp, where } from \"firebase/firestore\";\nimport DashboardHeading from \"module/dashboard/DashboardHeading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PostAddNew = () => {\n  _s();\n\n  const {\n    userInfo\n  } = useAuth();\n  const {\n    control,\n    watch,\n    setValue,\n    handleSubmit,\n    getValues,\n    reset\n  } = useForm({\n    mode: \"onChange\",\n    defaultValues: {\n      title: \"\",\n      slug: \"\",\n      status: 2,\n      category: {},\n      hot: false,\n      image: \"\"\n    }\n  });\n  const watchStatus = watch(\"status\");\n  const watchHot = watch(\"hot\");\n  const {\n    image,\n    handleResetUpload,\n    progress,\n    handleSelectImage,\n    handleDeleteImage\n  } = useFirebaseImage(setValue, getValues);\n  const [categories, setCategories] = useState([]);\n  const [selectCategory, setSelectCategory] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    async function fetchUserData() {\n      if (!userInfo.uid) return;\n      const q = query(collection(db, \"users\"), where(\"email\", \"==\", userInfo.email));\n      const querySnapshot = await getDocs(q);\n      querySnapshot.forEach(doc => {\n        setValue(\"user\", {\n          id: doc.id,\n          ...doc.data()\n        });\n      });\n    }\n\n    fetchUserData(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [userInfo.email]);\n\n  const addPostHandler = async values => {\n    setLoading(true);\n\n    try {\n      const cloneValues = { ...values\n      };\n      cloneValues.slug = slugify(values.slug || values.title, {\n        lower: true\n      });\n      cloneValues.status = Number(values.status);\n      const colRef = collection(db, \"posts\");\n      await addDoc(colRef, { ...cloneValues,\n        image,\n        userId: userInfo.uid,\n        createdAt: serverTimestamp()\n      });\n      toast.success(\"Create new post successfully!\");\n      reset({\n        title: \"\",\n        slug: \"\",\n        status: 2,\n        category: {},\n        hot: false,\n        image: \"\"\n      });\n      handleResetUpload();\n      setSelectCategory({});\n    } catch (error) {\n      setLoading(false);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    async function getData() {\n      const colRef = collection(db, \"categories\");\n      const q = query(colRef, where(\"status\", \"==\", 1));\n      const querySnapshot = await getDocs(q);\n      let result = [];\n      querySnapshot.forEach(doc => {\n        result.push({\n          id: doc.id,\n          ...doc.data()\n        });\n      });\n      setCategories(result);\n    }\n\n    getData();\n  }, []);\n  useEffect(() => {\n    document.title = \"Monkey Blogging - Add new post\";\n  }, []);\n\n  const handleClickOption = async item => {\n    const colRef = doc(db, \"categories\", item.id);\n    const docData = await getDoc(colRef);\n    setValue(\"category\", {\n      id: docData.id,\n      ...docData.data()\n    });\n    setSelectCategory(item);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DashboardHeading, {\n      title: \"Add post\",\n      desc: \"Add new post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(addPostHandler),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-layout\",\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            control: control,\n            placeholder: \"Enter your title\",\n            name: \"title\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Slug\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            control: control,\n            placeholder: \"Enter your slug\",\n            name: \"slug\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-layout\",\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ImageUpload, {\n            onChange: handleSelectImage,\n            handleDeleteImage: handleDeleteImage,\n            className: \"h-[250px]\",\n            progress: progress,\n            image: image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            children: [/*#__PURE__*/_jsxDEV(Dropdown.Select, {\n              placeholder: \"Select the category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.List, {\n              children: categories.length > 0 && categories.map(item => /*#__PURE__*/_jsxDEV(Dropdown.Option, {\n                onClick: () => handleClickOption(item),\n                children: item.name\n              }, item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), (selectCategory === null || selectCategory === void 0 ? void 0 : selectCategory.name) && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"inline-block p-3 rounded-lg bg-green-50 text-sm text-green-600 font-medium\",\n            children: selectCategory === null || selectCategory === void 0 ? void 0 : selectCategory.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-layout\",\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Feature post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Toggle, {\n            on: watchHot === true,\n            onClick: () => setValue(\"hot\", !watchHot)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FieldCheckboxes, {\n            children: [/*#__PURE__*/_jsxDEV(Radio, {\n              name: \"status\",\n              control: control,\n              checked: Number(watchStatus) === postStatus.APPROVED,\n              value: postStatus.APPROVED,\n              children: \"Approved\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Radio, {\n              name: \"status\",\n              control: control,\n              checked: Number(watchStatus) === postStatus.PENDING,\n              value: postStatus.PENDING,\n              children: \"Pending\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Radio, {\n              name: \"status\",\n              control: control,\n              checked: Number(watchStatus) === postStatus.REJECTED,\n              value: postStatus.REJECTED,\n              children: \"Reject\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        className: \"mx-auto w-[250px]\",\n        isLoading: loading,\n        disabled: loading,\n        children: \"Add new post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PostAddNew, \"63MeK80R/yT7phsIFcoYcGcxWnE=\", false, function () {\n  return [useAuth, useForm, useFirebaseImage];\n});\n\n_c = PostAddNew;\nexport default PostAddNew;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostAddNew\");","map":{"version":3,"sources":["E:/KTCity/react-course-project/react-monkey-blogging/src/module/post/PostAddNew.js"],"names":["useFirebaseImage","Toggle","slugify","React","useEffect","useState","ImageUpload","useForm","useAuth","toast","Radio","postStatus","Label","Input","Field","FieldCheckboxes","Dropdown","db","Button","addDoc","collection","doc","getDoc","getDocs","query","serverTimestamp","where","DashboardHeading","PostAddNew","userInfo","control","watch","setValue","handleSubmit","getValues","reset","mode","defaultValues","title","slug","status","category","hot","image","watchStatus","watchHot","handleResetUpload","progress","handleSelectImage","handleDeleteImage","categories","setCategories","selectCategory","setSelectCategory","loading","setLoading","fetchUserData","uid","q","email","querySnapshot","forEach","id","data","addPostHandler","values","cloneValues","lower","Number","colRef","userId","createdAt","success","error","getData","result","push","document","handleClickOption","item","docData","length","map","name","APPROVED","PENDING","REJECTED"],"mappings":"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","sourcesContent":["import useFirebaseImage from \"hooks/useFirebaseImage\";\nimport Toggle from \"components/toggle/Toggle\";\nimport slugify from \"slugify\";\nimport React, { useEffect, useState } from \"react\";\nimport ImageUpload from \"components/image/ImageUpload\";\nimport { useForm } from \"react-hook-form\";\nimport { useAuth } from \"contexts/auth-context\";\nimport { toast } from \"react-toastify\";\nimport { Radio } from \"components/checkbox\";\nimport { postStatus } from \"utils/constants\";\nimport { Label } from \"components/label\";\nimport { Input } from \"components/input\";\nimport { Field, FieldCheckboxes } from \"components/field\";\nimport { Dropdown } from \"components/dropdown\";\nimport { db } from \"firebase-app/firebase-config\";\nimport { Button } from \"components/button\";\nimport {\n  addDoc,\n  collection,\n  doc,\n  getDoc,\n  getDocs,\n  query,\n  serverTimestamp,\n  where,\n} from \"firebase/firestore\";\nimport DashboardHeading from \"module/dashboard/DashboardHeading\";\n\nconst PostAddNew = () => {\n  const { userInfo } = useAuth();\n  const { control, watch, setValue, handleSubmit, getValues, reset } = useForm({\n    mode: \"onChange\",\n    defaultValues: {\n      title: \"\",\n      slug: \"\",\n      status: 2,\n      category: {},\n      hot: false,\n      image: \"\",\n    },\n  });\n  const watchStatus = watch(\"status\");\n  const watchHot = watch(\"hot\");\n  const {\n    image,\n    handleResetUpload,\n    progress,\n    handleSelectImage,\n    handleDeleteImage,\n  } = useFirebaseImage(setValue, getValues);\n  const [categories, setCategories] = useState([]);\n  const [selectCategory, setSelectCategory] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    async function fetchUserData() {\n      if (!userInfo.uid) return;\n      const q = query(\n        collection(db, \"users\"),\n        where(\"email\", \"==\", userInfo.email)\n      );\n      const querySnapshot = await getDocs(q);\n      querySnapshot.forEach((doc) => {\n        setValue(\"user\", {\n          id: doc.id,\n          ...doc.data(),\n        });\n      });\n    }\n    fetchUserData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [userInfo.email]);\n  const addPostHandler = async (values) => {\n    setLoading(true);\n    try {\n      const cloneValues = { ...values };\n      cloneValues.slug = slugify(values.slug || values.title, { lower: true });\n      cloneValues.status = Number(values.status);\n      const colRef = collection(db, \"posts\");\n      await addDoc(colRef, {\n        ...cloneValues,\n        image,\n        userId: userInfo.uid,\n        createdAt: serverTimestamp(),\n      });\n      toast.success(\"Create new post successfully!\");\n      reset({\n        title: \"\",\n        slug: \"\",\n        status: 2,\n        category: {},\n        hot: false,\n        image: \"\",\n      });\n      handleResetUpload();\n      setSelectCategory({});\n    } catch (error) {\n      setLoading(false);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    async function getData() {\n      const colRef = collection(db, \"categories\");\n      const q = query(colRef, where(\"status\", \"==\", 1));\n      const querySnapshot = await getDocs(q);\n      let result = [];\n      querySnapshot.forEach((doc) => {\n        result.push({\n          id: doc.id,\n          ...doc.data(),\n        });\n      });\n      setCategories(result);\n    }\n    getData();\n  }, []);\n\n  useEffect(() => {\n    document.title = \"Monkey Blogging - Add new post\";\n  }, []);\n\n  const handleClickOption = async (item) => {\n    const colRef = doc(db, \"categories\", item.id);\n    const docData = await getDoc(colRef);\n    setValue(\"category\", {\n      id: docData.id,\n      ...docData.data(),\n    });\n    setSelectCategory(item);\n  };\n\n  return (\n    <>\n      <DashboardHeading title=\"Add post\" desc=\"Add new post\"></DashboardHeading>\n      <form onSubmit={handleSubmit(addPostHandler)}>\n        <div className=\"form-layout\">\n          <Field>\n            <Label>Title</Label>\n            <Input\n              control={control}\n              placeholder=\"Enter your title\"\n              name=\"title\"\n              required\n            ></Input>\n          </Field>\n          <Field>\n            <Label>Slug</Label>\n            <Input\n              control={control}\n              placeholder=\"Enter your slug\"\n              name=\"slug\"\n            ></Input>\n          </Field>\n        </div>\n        <div className=\"form-layout\">\n          <Field>\n            <Label>Image</Label>\n            <ImageUpload\n              onChange={handleSelectImage}\n              handleDeleteImage={handleDeleteImage}\n              className=\"h-[250px]\"\n              progress={progress}\n              image={image}\n            ></ImageUpload>\n          </Field>\n          <Field>\n            <Label>Category</Label>\n            <Dropdown>\n              <Dropdown.Select placeholder=\"Select the category\"></Dropdown.Select>\n              <Dropdown.List>\n                {categories.length > 0 &&\n                  categories.map((item) => (\n                    <Dropdown.Option\n                      key={item.id}\n                      onClick={() => handleClickOption(item)}\n                    >\n                      {item.name}\n                    </Dropdown.Option>\n                  ))}\n              </Dropdown.List>\n            </Dropdown>\n            {selectCategory?.name && (\n              <span className=\"inline-block p-3 rounded-lg bg-green-50 text-sm text-green-600 font-medium\">\n                {selectCategory?.name}\n              </span>\n            )}\n          </Field>\n        </div>\n        <div className=\"form-layout\">\n          <Field>\n            <Label>Feature post</Label>\n            <Toggle\n              on={watchHot === true}\n              onClick={() => setValue(\"hot\", !watchHot)}\n            ></Toggle>\n          </Field>\n          <Field>\n            <Label>Status</Label>\n            <FieldCheckboxes>\n              <Radio\n                name=\"status\"\n                control={control}\n                checked={Number(watchStatus) === postStatus.APPROVED}\n                value={postStatus.APPROVED}\n              >\n                Approved\n              </Radio>\n              <Radio\n                name=\"status\"\n                control={control}\n                checked={Number(watchStatus) === postStatus.PENDING}\n                value={postStatus.PENDING}\n              >\n                Pending\n              </Radio>\n              <Radio\n                name=\"status\"\n                control={control}\n                checked={Number(watchStatus) === postStatus.REJECTED}\n                value={postStatus.REJECTED}\n              >\n                Reject\n              </Radio>\n            </FieldCheckboxes>\n          </Field>\n        </div>\n        <Button\n          type=\"submit\"\n          className=\"mx-auto w-[250px]\"\n          isLoading={loading}\n          disabled={loading}\n        >\n          Add new post\n        </Button>\n      </form>\n    </>\n  );\n};\n\nexport default PostAddNew;\n"]},"metadata":{},"sourceType":"module"}
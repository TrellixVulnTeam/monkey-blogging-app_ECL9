{"ast":null,"code":"var _jsxFileName = \"E:\\\\KTCity\\\\react-course-project\\\\react-monkey-blogging\\\\src\\\\pages\\\\SignUpPage.js\",\n    _s = $RefreshSig$();\n\nimport slugify from \"slugify\";\nimport React, { useEffect } from \"react\";\nimport InputPasswordToggle from \"components/input/InputPasswordToggle\";\nimport AuthenticationPage from \"./AuthenticationPage\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useForm } from \"react-hook-form\";\nimport { toast } from \"react-toastify\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport { Label } from \"components/label\";\nimport { Input } from \"components/input\";\nimport { Field } from \"components/field\";\nimport { doc, serverTimestamp, setDoc } from \"firebase/firestore\";\nimport { createUserWithEmailAndPassword, updateProfile } from \"firebase/auth\";\nimport { Button } from \"components/button\";\nimport { auth, db } from \"firebase-app/firebase-config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object({\n  fullname: yup.string().required(\"Please enter your fullname\"),\n  email: yup.string().email(\"Please enter valid email address\").required(\"Please enter your email address\"),\n  password: yup.string().min(8, \"Your password must be at least 8 characters or greater\").required(\"Please enter your password\")\n});\n\nconst SignUpPage = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const {\n    control,\n    handleSubmit,\n    formState: {\n      errors,\n      isValid,\n      isSubmitting\n    }\n  } = useForm({\n    mode: \"onChange\",\n    resolver: yupResolver(schema)\n  });\n\n  const handleSignUp = async values => {\n    if (!isValid) return;\n    await createUserWithEmailAndPassword(auth, values.email, values.password);\n    await updateProfile(auth.currentUser, {\n      displayName: values.fullname,\n      photoURL: \"https://gamek.mediacdn.vn/133514250583805952/2022/5/18/photo-1-16528608926331302726659.jpg\"\n    });\n    await setDoc(doc(db, \"users\", auth.currentUser.uid), {\n      fullname: values.fullname,\n      email: values.email,\n      password: values.password,\n      username: slugify(values.fullname, {\n        lower: true\n      }),\n      avatar: \"https://gamek.mediacdn.vn/133514250583805952/2022/5/18/photo-1-16528608926331302726659.jpg\",\n      status: 1,\n      role: 3,\n      createdAt: serverTimestamp()\n    });\n    toast.success(\"Register successfully!!!\");\n    navigate(\"/\");\n  };\n\n  useEffect(() => {\n    const arrErroes = Object.values(errors);\n\n    if (arrErroes.length > 0) {\n      var _arrErroes$;\n\n      toast.error((_arrErroes$ = arrErroes[0]) === null || _arrErroes$ === void 0 ? void 0 : _arrErroes$.message, {\n        pauseOnHover: false,\n        delay: 0\n      });\n    }\n  }, [errors]);\n  useEffect(() => {\n    document.title = \"Register Page\";\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthenticationPage, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleSubmit(handleSignUp),\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"fullname\",\n          children: \"Fullname\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"fullname\",\n          placeholder: \"Enter your fullname\",\n          control: control\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"email\",\n          children: \"Email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Enter your email\",\n          control: control\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputPasswordToggle, {\n          control: control\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"have-account\",\n        children: [\"You already have an account? \", /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/sign-in\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 40\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        className: \"w-full max-w-[300px] mx-auto\",\n        isLoading: isSubmitting,\n        disabled: isSubmitting,\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignUpPage, \"zllgwujfvnrDylPpuPK6AVaSiiM=\", false, function () {\n  return [useNavigate, useForm];\n});\n\n_c = SignUpPage;\nexport default SignUpPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpPage\");","map":{"version":3,"sources":["E:/KTCity/react-course-project/react-monkey-blogging/src/pages/SignUpPage.js"],"names":["slugify","React","useEffect","InputPasswordToggle","AuthenticationPage","yup","yupResolver","useForm","toast","NavLink","useNavigate","Label","Input","Field","doc","serverTimestamp","setDoc","createUserWithEmailAndPassword","updateProfile","Button","auth","db","schema","object","fullname","string","required","email","password","min","SignUpPage","navigate","control","handleSubmit","formState","errors","isValid","isSubmitting","mode","resolver","handleSignUp","values","currentUser","displayName","photoURL","uid","username","lower","avatar","status","role","createdAt","success","arrErroes","Object","length","error","message","pauseOnHover","delay","document","title"],"mappings":"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","sourcesContent":["import slugify from \"slugify\";\nimport React, { useEffect } from \"react\";\nimport InputPasswordToggle from \"components/input/InputPasswordToggle\";\nimport AuthenticationPage from \"./AuthenticationPage\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useForm } from \"react-hook-form\";\nimport { toast } from \"react-toastify\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport { Label } from \"components/label\";\nimport { Input } from \"components/input\";\nimport { Field } from \"components/field\";\nimport { doc, serverTimestamp, setDoc } from \"firebase/firestore\";\nimport { createUserWithEmailAndPassword, updateProfile } from \"firebase/auth\";\nimport { Button } from \"components/button\";\nimport { auth, db } from \"firebase-app/firebase-config\";\n\nconst schema = yup.object({\n  fullname: yup.string().required(\"Please enter your fullname\"),\n  email: yup\n    .string()\n    .email(\"Please enter valid email address\")\n    .required(\"Please enter your email address\"),\n  password: yup\n    .string()\n    .min(8, \"Your password must be at least 8 characters or greater\")\n    .required(\"Please enter your password\"),\n});\n\nconst SignUpPage = () => {\n  const navigate = useNavigate();\n  const {\n    control,\n    handleSubmit,\n    formState: { errors, isValid, isSubmitting },\n  } = useForm({\n    mode: \"onChange\",\n    resolver: yupResolver(schema),\n  });\n  const handleSignUp = async (values) => {\n    if (!isValid) return;\n    await createUserWithEmailAndPassword(auth, values.email, values.password);\n    await updateProfile(auth.currentUser, {\n      displayName: values.fullname,\n      photoURL:\n        \"https://gamek.mediacdn.vn/133514250583805952/2022/5/18/photo-1-16528608926331302726659.jpg\",\n    });\n\n    await setDoc(doc(db, \"users\", auth.currentUser.uid), {\n      fullname: values.fullname,\n      email: values.email,\n      password: values.password,\n      username: slugify(values.fullname, { lower: true }),\n      avatar:\n        \"https://gamek.mediacdn.vn/133514250583805952/2022/5/18/photo-1-16528608926331302726659.jpg\",\n      status: 1,\n      role: 3,\n      createdAt: serverTimestamp(),\n    });\n\n    toast.success(\"Register successfully!!!\");\n    navigate(\"/\");\n  };\n  useEffect(() => {\n    const arrErroes = Object.values(errors);\n    if (arrErroes.length > 0) {\n      toast.error(arrErroes[0]?.message, {\n        pauseOnHover: false,\n        delay: 0,\n      });\n    }\n  }, [errors]);\n  useEffect(() => {\n    document.title = \"Register Page\";\n  }, []);\n  return (\n    <AuthenticationPage>\n      <form\n        className=\"form\"\n        onSubmit={handleSubmit(handleSignUp)}\n        autoComplete=\"off\"\n      >\n        <Field>\n          <Label htmlFor=\"fullname\">Fullname</Label>\n          <Input\n            type=\"text\"\n            name=\"fullname\"\n            placeholder=\"Enter your fullname\"\n            control={control}\n          />\n        </Field>\n        <Field>\n          <Label htmlFor=\"email\">Email address</Label>\n          <Input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Enter your email\"\n            control={control}\n          />\n        </Field>\n        <Field>\n          <Label htmlFor=\"password\">Password</Label>\n          <InputPasswordToggle control={control}></InputPasswordToggle>\n        </Field>\n        <div className=\"have-account\">\n          You already have an account? <NavLink to={\"/sign-in\"}>Login</NavLink>{\" \"}\n        </div>\n        <Button\n          type=\"submit\"\n          className=\"w-full max-w-[300px] mx-auto\"\n          isLoading={isSubmitting}\n          disabled={isSubmitting}\n        >\n          Sign Up\n        </Button>\n      </form>\n    </AuthenticationPage>\n  );\n};\n\nexport default SignUpPage;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"E:\\\\KTCity\\\\react-course-project\\\\react-monkey-blogging\\\\src\\\\components\\\\dropdown\\\\dropdown-context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DropdownContext = /*#__PURE__*/createContext();\n\nfunction DropdownProvider(props) {\n  _s();\n\n  const [show, setShow] = useState(false);\n\n  const toggle = () => {\n    setShow(!show);\n  };\n\n  const values = {\n    show,\n    setShow,\n    toggle\n  };\n  return /*#__PURE__*/_jsxDEV(DropdownContext.Provider, {\n    value: values,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DropdownProvider, \"NKb1ZOdhT+qUsWLXSgjSS2bk2C4=\");\n\n_c = DropdownProvider;\n\nfunction useDropdown() {\n  _s2();\n\n  const context = useContext(DropdownContext);\n  if (typeof context === \"undefined\") throw new Error(\"useDropdown must be used within DropdownProvider\");\n  return context;\n}\n\n_s2(useDropdown, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport { useDropdown, DropdownProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"DropdownProvider\");","map":{"version":3,"sources":["E:/KTCity/react-course-project/react-monkey-blogging/src/components/dropdown/dropdown-context.js"],"names":["createContext","useContext","useState","DropdownContext","DropdownProvider","props","show","setShow","toggle","values","children","useDropdown","context","Error"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,QAAoD,OAApD;;AAEA,MAAMC,eAAe,gBAAGH,aAAa,EAArC;;AACA,SAASI,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AAC/B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,KAAD,CAAhC;;AACA,QAAMM,MAAM,GAAG,MAAM;AACnBD,IAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACD,GAFD;;AAGA,QAAMG,MAAM,GAAG;AAAEH,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,GAAf;AACA,sBACE,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAEC,MAAjC;AAAA,cACGJ,KAAK,CAACK;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAXQN,gB;;KAAAA,gB;;AAYT,SAASO,WAAT,GAAuB;AAAA;;AACrB,QAAMC,OAAO,GAAGX,UAAU,CAACE,eAAD,CAA1B;AACA,MAAI,OAAOS,OAAP,KAAmB,WAAvB,EACE,MAAM,IAAIC,KAAJ,CAAU,kDAAV,CAAN;AACF,SAAOD,OAAP;AACD;;IALQD,W;;AAMT,SAASA,WAAT,EAAsBP,gBAAtB","sourcesContent":["import { createContext, useContext, useState } from \"react\";\n\nconst DropdownContext = createContext();\nfunction DropdownProvider(props) {\n  const [show, setShow] = useState(false);\n  const toggle = () => {\n    setShow(!show);\n  };\n  const values = { show, setShow, toggle };\n  return (\n    <DropdownContext.Provider value={values}>\n      {props.children}\n    </DropdownContext.Provider>\n  );\n}\nfunction useDropdown() {\n  const context = useContext(DropdownContext);\n  if (typeof context === \"undefined\")\n    throw new Error(\"useDropdown must be used within DropdownProvider\");\n  return context;\n}\nexport { useDropdown, DropdownProvider };\n"]},"metadata":{},"sourceType":"module"}
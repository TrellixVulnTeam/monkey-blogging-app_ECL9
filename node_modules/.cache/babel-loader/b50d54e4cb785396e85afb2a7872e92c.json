{"ast":null,"code":"var _jsxFileName = \"E:\\\\KTCity\\\\react-course-project\\\\react-monkey-blogging\\\\src\\\\components\\\\input\\\\InputPasswordToggle.js\",\n    _s = $RefreshSig$();\n\nimport { IconEyeClose, IconEyeOpen } from \"components/icon\";\nimport React, { Fragment, useState } from \"react\";\nimport Input from \"./Input\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InputPasswordToggle = _ref => {\n  _s();\n\n  let {\n    control,\n    name\n  } = _ref;\n  const [togglePassword, setTogglePassword] = useState(false);\n  if (!control) return null;\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Input, {\n      type: togglePassword ? \"text\" : \"password\",\n      name: \"password\",\n      placeholder: \"Enter your password\",\n      control: control,\n      children: !togglePassword ? /*#__PURE__*/_jsxDEV(IconEyeClose, {\n        onClick: () => setTogglePassword(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(IconEyeOpen, {\n        onClick: () => setTogglePassword(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InputPasswordToggle, \"5wcP5fyQF//5JRK1mqw369Vz274=\");\n\n_c = InputPasswordToggle;\nInputPasswordToggle.prototype = {\n  control: PropTypes.any.isRequired\n};\nexport default InputPasswordToggle;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputPasswordToggle\");","map":{"version":3,"sources":["E:/KTCity/react-course-project/react-monkey-blogging/src/components/input/InputPasswordToggle.js"],"names":["IconEyeClose","IconEyeOpen","React","Fragment","useState","Input","PropTypes","InputPasswordToggle","control","name","togglePassword","setTogglePassword","prototype","any","isRequired"],"mappings":";;;AAAA,SAASA,YAAT,EAAuBC,WAAvB,QAA0C,iBAA1C;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AACA,MAAMC,mBAAmB,GAAG,QAAuB;AAAA;;AAAA,MAAtB;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAsB;AACjD,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,KAAD,CAApD;AACA,MAAI,CAACI,OAAL,EAAc,OAAO,IAAP;AACd,sBACE,QAAC,QAAD;AAAA,2BACE,QAAC,KAAD;AACE,MAAA,IAAI,EAAEE,cAAc,GAAG,MAAH,GAAY,UADlC;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,WAAW,EAAC,qBAHd;AAIE,MAAA,OAAO,EAAEF,OAJX;AAAA,gBAMG,CAACE,cAAD,gBACC,QAAC,YAAD;AAAc,QAAA,OAAO,EAAE,MAAMC,iBAAiB,CAAC,IAAD;AAA9C;AAAA;AAAA;AAAA;AAAA,cADD,gBAGC,QAAC,WAAD;AAAa,QAAA,OAAO,EAAE,MAAMA,iBAAiB,CAAC,KAAD;AAA7C;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAnBD;;GAAMJ,mB;;KAAAA,mB;AAoBNA,mBAAmB,CAACK,SAApB,GAAgC;AAC9BJ,EAAAA,OAAO,EAAEF,SAAS,CAACO,GAAV,CAAcC;AADO,CAAhC;AAGA,eAAeP,mBAAf","sourcesContent":["import { IconEyeClose, IconEyeOpen } from \"components/icon\";\nimport React, { Fragment, useState } from \"react\";\nimport Input from \"./Input\";\nimport PropTypes from \"prop-types\";\nconst InputPasswordToggle = ({ control, name }) => {\n  const [togglePassword, setTogglePassword] = useState(false);\n  if (!control) return null;\n  return (\n    <Fragment>\n      <Input\n        type={togglePassword ? \"text\" : \"password\"}\n        name=\"password\"\n        placeholder=\"Enter your password\"\n        control={control}\n      >\n        {!togglePassword ? (\n          <IconEyeClose onClick={() => setTogglePassword(true)}></IconEyeClose>\n        ) : (\n          <IconEyeOpen onClick={() => setTogglePassword(false)}></IconEyeOpen>\n        )}\n      </Input>\n    </Fragment>\n  );\n};\nInputPasswordToggle.prototype = {\n  control: PropTypes.any.isRequired,\n};\nexport default InputPasswordToggle;\n"]},"metadata":{},"sourceType":"module"}
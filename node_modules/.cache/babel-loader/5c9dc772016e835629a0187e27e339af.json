{"ast":null,"code":"var _jsxFileName = \"E:\\\\KTCity\\\\react-course-project\\\\react-monkey-blogging\\\\src\\\\module\\\\post\\\\PostUpdate.js\",\n    _s = $RefreshSig$();\n\nimport { Button } from \"components/button\";\nimport { Radio } from \"components/checkbox\";\nimport { Dropdown } from \"components/dropdown\";\nimport { Field, FieldCheckboxes } from \"components/field\";\nimport ImageUpload from \"components/image/ImageUpload\";\nimport { Input } from \"components/input\";\nimport { Label } from \"components/label\";\nimport Toggle from \"components/toggle/Toggle\";\nimport DashboardHeading from \"drafts/DashboardHeading\";\nimport { db } from \"firebase-app/firebase-config\";\nimport { collection, doc, getDoc, getDocs, query, updateDoc, where } from \"firebase/firestore\";\nimport useFirebaseImage from \"hooks/useFirebaseImage\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { postStatus } from \"utils/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PostUpdate = () => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [categories, setCategories] = useState([]);\n  const [params] = useSearchParams();\n  const postId = params.get(\"id\");\n  const {\n    control,\n    setValue,\n    watch,\n    reset,\n    getValues,\n    handleSubmit,\n    formState: {\n      isValid,\n      isSubmitting\n    }\n  } = useForm({\n    mode: \"onChange\"\n  });\n  const imageUrl = getValues(\"image\");\n  const imageName = getValues(\"image_name\");\n  const {\n    image,\n    setImage,\n    progress,\n    handleSelectImage,\n    handleDeleteImage\n  } = useFirebaseImage(setValue, getValues, imageName, deletePostImage);\n\n  async function deletePostImage() {\n    const colRef = doc(db, \"users\", postId);\n    await updateDoc(colRef, {\n      image: \"\"\n    });\n  }\n\n  useEffect(() => {\n    setImage(imageUrl);\n  }, [imageUrl, setImage]);\n\n  const updatePostHandler = values => {};\n\n  const watchHot = watch(\"hot\");\n  const watchStatus = watch(\"status\");\n  useEffect(() => {\n    async function fetchData() {\n      if (!postId) return;\n      const docRef = doc(db, \"posts\", postId);\n      const docSnapshot = await getDoc(docRef);\n\n      if (docSnapshot.data()) {\n        reset(docSnapshot.data());\n      }\n    }\n\n    fetchData();\n  }, [postId, reset]);\n  useEffect(() => {\n    async function getCategoriesData() {\n      const colRef = collection(db, \"categories\");\n      const q = query(colRef, where(\"status\", \"==\", 1));\n      const querySnapshot = await getDocs(q);\n      let result = [];\n      querySnapshot.forEach(doc => {\n        result.push({\n          id: doc.id,\n          ...doc.data()\n        });\n      });\n      setCategories(result);\n    }\n\n    getCategoriesData();\n  }, []);\n\n  const handleClickOption = async item => {\n    const colRef = doc(db, \"categories\", item.id);\n    const docData = await getDoc(colRef);\n    setValue(\"category\", {\n      id: docData.id,\n      ...docData.data()\n    });\n    setSelectCategory(item);\n  };\n\n  if (!postId) return null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DashboardHeading, {\n      title: \"Update post\",\n      desc: \"Update post content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(updatePostHandler),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-layout\",\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            control: control,\n            placeholder: \"Enter your title\",\n            name: \"title\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Slug\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            control: control,\n            placeholder: \"Enter your slug\",\n            name: \"slug\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-layout\",\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ImageUpload, {\n            onChange: handleSelectImage,\n            handleDeleteImage: handleDeleteImage,\n            className: \"h-[250px]\",\n            progress: progress,\n            image: image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            children: [/*#__PURE__*/_jsxDEV(Dropdown.Select, {\n              placeholder: \"Select the category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.List, {\n              children: categories.length > 0 && categories.map(item => /*#__PURE__*/_jsxDEV(Dropdown.Option, {\n                onClick: () => handleClickOption(item),\n                children: item.name\n              }, item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-layout\",\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Feature post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Toggle, {\n            on: watchHot === true,\n            onClick: () => setValue(\"hot\", !watchHot)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FieldCheckboxes, {\n            children: [/*#__PURE__*/_jsxDEV(Radio, {\n              name: \"status\",\n              control: control,\n              checked: Number(watchStatus) === postStatus.APPROVED,\n              value: postStatus.APPROVED,\n              children: \"Approved\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Radio, {\n              name: \"status\",\n              control: control,\n              checked: Number(watchStatus) === postStatus.PENDING,\n              value: postStatus.PENDING,\n              children: \"Pending\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Radio, {\n              name: \"status\",\n              control: control,\n              checked: Number(watchStatus) === postStatus.REJECTED,\n              value: postStatus.REJECTED,\n              children: \"Reject\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        className: \"mx-auto w-[250px]\",\n        isLoading: loading,\n        disabled: loading,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PostUpdate, \"65Lb6qzxSOhmHO0bMMgBoWeBoiY=\", false, function () {\n  return [useSearchParams, useForm, useFirebaseImage];\n});\n\n_c = PostUpdate;\nexport default PostUpdate;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostUpdate\");","map":{"version":3,"sources":["E:/KTCity/react-course-project/react-monkey-blogging/src/module/post/PostUpdate.js"],"names":["Button","Radio","Dropdown","Field","FieldCheckboxes","ImageUpload","Input","Label","Toggle","DashboardHeading","db","collection","doc","getDoc","getDocs","query","updateDoc","where","useFirebaseImage","React","useEffect","useState","useForm","useSearchParams","postStatus","PostUpdate","loading","setLoading","categories","setCategories","params","postId","get","control","setValue","watch","reset","getValues","handleSubmit","formState","isValid","isSubmitting","mode","imageUrl","imageName","image","setImage","progress","handleSelectImage","handleDeleteImage","deletePostImage","colRef","updatePostHandler","values","watchHot","watchStatus","fetchData","docRef","docSnapshot","data","getCategoriesData","q","querySnapshot","result","forEach","push","id","handleClickOption","item","docData","setSelectCategory","length","map","name","Number","APPROVED","PENDING","REJECTED"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,mBAAvB;AACA,SAASC,KAAT,QAAsB,qBAAtB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,KAAT,EAAgBC,eAAhB,QAAuC,kBAAvC;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,SAASC,EAAT,QAAmB,8BAAnB;AACA,SACEC,UADF,EAEEC,GAFF,EAGEC,MAHF,EAIEC,OAJF,EAKEC,KALF,EAMEC,SANF,EAOEC,KAPF,QAQO,oBARP;AASA,OAAOC,gBAAP,MAA6B,wBAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,eAAT,QAAgC,kBAAhC;AACA,SAASC,UAAT,QAA2B,iBAA3B;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACS,MAAD,IAAWP,eAAe,EAAhC;AACA,QAAMQ,MAAM,GAAGD,MAAM,CAACE,GAAP,CAAW,IAAX,CAAf;AACA,QAAM;AACJC,IAAAA,OADI;AAEJC,IAAAA,QAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA,KAJI;AAKJC,IAAAA,SALI;AAMJC,IAAAA,YANI;AAOJC,IAAAA,SAAS,EAAE;AAAEC,MAAAA,OAAF;AAAWC,MAAAA;AAAX;AAPP,MAQFnB,OAAO,CAAC;AACVoB,IAAAA,IAAI,EAAE;AADI,GAAD,CARX;AAWA,QAAMC,QAAQ,GAAGN,SAAS,CAAC,OAAD,CAA1B;AACA,QAAMO,SAAS,GAAGP,SAAS,CAAC,YAAD,CAA3B;AACA,QAAM;AAAEQ,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA,QAAnB;AAA6BC,IAAAA,iBAA7B;AAAgDC,IAAAA;AAAhD,MACJ/B,gBAAgB,CAACgB,QAAD,EAAWG,SAAX,EAAsBO,SAAtB,EAAiCM,eAAjC,CADlB;;AAEA,iBAAeA,eAAf,GAAiC;AAC/B,UAAMC,MAAM,GAAGvC,GAAG,CAACF,EAAD,EAAK,OAAL,EAAcqB,MAAd,CAAlB;AACA,UAAMf,SAAS,CAACmC,MAAD,EAAS;AACtBN,MAAAA,KAAK,EAAE;AADe,KAAT,CAAf;AAGD;;AACDzB,EAAAA,SAAS,CAAC,MAAM;AACd0B,IAAAA,QAAQ,CAACH,QAAD,CAAR;AACD,GAFQ,EAEN,CAACA,QAAD,EAAWG,QAAX,CAFM,CAAT;;AAGA,QAAMM,iBAAiB,GAAIC,MAAD,IAAY,CAAE,CAAxC;;AACA,QAAMC,QAAQ,GAAGnB,KAAK,CAAC,KAAD,CAAtB;AACA,QAAMoB,WAAW,GAAGpB,KAAK,CAAC,QAAD,CAAzB;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeoC,SAAf,GAA2B;AACzB,UAAI,CAACzB,MAAL,EAAa;AACb,YAAM0B,MAAM,GAAG7C,GAAG,CAACF,EAAD,EAAK,OAAL,EAAcqB,MAAd,CAAlB;AACA,YAAM2B,WAAW,GAAG,MAAM7C,MAAM,CAAC4C,MAAD,CAAhC;;AACA,UAAIC,WAAW,CAACC,IAAZ,EAAJ,EAAwB;AACtBvB,QAAAA,KAAK,CAACsB,WAAW,CAACC,IAAZ,EAAD,CAAL;AACD;AACF;;AACDH,IAAAA,SAAS;AACV,GAVQ,EAUN,CAACzB,MAAD,EAASK,KAAT,CAVM,CAAT;AAWAhB,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAewC,iBAAf,GAAmC;AACjC,YAAMT,MAAM,GAAGxC,UAAU,CAACD,EAAD,EAAK,YAAL,CAAzB;AACA,YAAMmD,CAAC,GAAG9C,KAAK,CAACoC,MAAD,EAASlC,KAAK,CAAC,QAAD,EAAW,IAAX,EAAiB,CAAjB,CAAd,CAAf;AACA,YAAM6C,aAAa,GAAG,MAAMhD,OAAO,CAAC+C,CAAD,CAAnC;AACA,UAAIE,MAAM,GAAG,EAAb;AACAD,MAAAA,aAAa,CAACE,OAAd,CAAuBpD,GAAD,IAAS;AAC7BmD,QAAAA,MAAM,CAACE,IAAP,CAAY;AACVC,UAAAA,EAAE,EAAEtD,GAAG,CAACsD,EADE;AAEV,aAAGtD,GAAG,CAAC+C,IAAJ;AAFO,SAAZ;AAID,OALD;AAMA9B,MAAAA,aAAa,CAACkC,MAAD,CAAb;AACD;;AACDH,IAAAA,iBAAiB;AAClB,GAfQ,EAeN,EAfM,CAAT;;AAgBA,QAAMO,iBAAiB,GAAG,MAAOC,IAAP,IAAgB;AACxC,UAAMjB,MAAM,GAAGvC,GAAG,CAACF,EAAD,EAAK,YAAL,EAAmB0D,IAAI,CAACF,EAAxB,CAAlB;AACA,UAAMG,OAAO,GAAG,MAAMxD,MAAM,CAACsC,MAAD,CAA5B;AACAjB,IAAAA,QAAQ,CAAC,UAAD,EAAa;AACnBgC,MAAAA,EAAE,EAAEG,OAAO,CAACH,EADO;AAEnB,SAAGG,OAAO,CAACV,IAAR;AAFgB,KAAb,CAAR;AAIAW,IAAAA,iBAAiB,CAACF,IAAD,CAAjB;AACD,GARD;;AASA,MAAI,CAACrC,MAAL,EAAa,OAAO,IAAP;AACb,sBACE;AAAA,4BACE,QAAC,gBAAD;AACE,MAAA,KAAK,EAAC,aADR;AAEE,MAAA,IAAI,EAAC;AAFP;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAM,MAAA,QAAQ,EAAEO,YAAY,CAACc,iBAAD,CAA5B;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACE,QAAC,KAAD;AAAA,kCACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AACE,YAAA,OAAO,EAAEnB,OADX;AAEE,YAAA,WAAW,EAAC,kBAFd;AAGE,YAAA,IAAI,EAAC,OAHP;AAIE,YAAA,QAAQ;AAJV;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE,QAAC,KAAD;AAAA,kCACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AACE,YAAA,OAAO,EAAEA,OADX;AAEE,YAAA,WAAW,EAAC,iBAFd;AAGE,YAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAoBE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACE,QAAC,KAAD;AAAA,kCACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,WAAD;AACE,YAAA,QAAQ,EAAEe,iBADZ;AAEE,YAAA,iBAAiB,EAAEC,iBAFrB;AAGE,YAAA,SAAS,EAAC,WAHZ;AAIE,YAAA,QAAQ,EAAEF,QAJZ;AAKE,YAAA,KAAK,EAAEF;AALT;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE,QAAC,KAAD;AAAA,kCACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,QAAD;AAAA,oCACE,QAAC,QAAD,CAAU,MAAV;AAAiB,cAAA,WAAW,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,QAAD,CAAU,IAAV;AAAA,wBACGjB,UAAU,CAAC2C,MAAX,GAAoB,CAApB,IACC3C,UAAU,CAAC4C,GAAX,CAAgBJ,IAAD,iBACb,QAAC,QAAD,CAAU,MAAV;AAEE,gBAAA,OAAO,EAAE,MAAMD,iBAAiB,CAACC,IAAD,CAFlC;AAAA,0BAIGA,IAAI,CAACK;AAJR,iBACOL,IAAI,CAACF,EADZ;AAAA;AAAA;AAAA;AAAA,sBADF;AAFJ;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cApBF,eAsDE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACE,QAAC,KAAD;AAAA,kCACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,MAAD;AACE,YAAA,EAAE,EAAEZ,QAAQ,KAAK,IADnB;AAEE,YAAA,OAAO,EAAE,MAAMpB,QAAQ,CAAC,KAAD,EAAQ,CAACoB,QAAT;AAFzB;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE,QAAC,KAAD;AAAA,kCACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,eAAD;AAAA,oCACE,QAAC,KAAD;AACE,cAAA,IAAI,EAAC,QADP;AAEE,cAAA,OAAO,EAAErB,OAFX;AAGE,cAAA,OAAO,EAAEyC,MAAM,CAACnB,WAAD,CAAN,KAAwB/B,UAAU,CAACmD,QAH9C;AAIE,cAAA,KAAK,EAAEnD,UAAU,CAACmD,QAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eASE,QAAC,KAAD;AACE,cAAA,IAAI,EAAC,QADP;AAEE,cAAA,OAAO,EAAE1C,OAFX;AAGE,cAAA,OAAO,EAAEyC,MAAM,CAACnB,WAAD,CAAN,KAAwB/B,UAAU,CAACoD,OAH9C;AAIE,cAAA,KAAK,EAAEpD,UAAU,CAACoD,OAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATF,eAiBE,QAAC,KAAD;AACE,cAAA,IAAI,EAAC,QADP;AAEE,cAAA,OAAO,EAAE3C,OAFX;AAGE,cAAA,OAAO,EAAEyC,MAAM,CAACnB,WAAD,CAAN,KAAwB/B,UAAU,CAACqD,QAH9C;AAIE,cAAA,KAAK,EAAErD,UAAU,CAACqD,QAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cAtDF,eA4FE,QAAC,MAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAC,mBAFZ;AAGE,QAAA,SAAS,EAAEnD,OAHb;AAIE,QAAA,QAAQ,EAAEA,OAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA5FF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AA6GD,CAnLD;;GAAMD,U;UAGaF,e,EAUbD,O,EAMFJ,gB;;;KAnBEO,U;AAqLN,eAAeA,UAAf","sourcesContent":["import { Button } from \"components/button\";\nimport { Radio } from \"components/checkbox\";\nimport { Dropdown } from \"components/dropdown\";\nimport { Field, FieldCheckboxes } from \"components/field\";\nimport ImageUpload from \"components/image/ImageUpload\";\nimport { Input } from \"components/input\";\nimport { Label } from \"components/label\";\nimport Toggle from \"components/toggle/Toggle\";\nimport DashboardHeading from \"drafts/DashboardHeading\";\nimport { db } from \"firebase-app/firebase-config\";\nimport {\n  collection,\n  doc,\n  getDoc,\n  getDocs,\n  query,\n  updateDoc,\n  where,\n} from \"firebase/firestore\";\nimport useFirebaseImage from \"hooks/useFirebaseImage\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { postStatus } from \"utils/constants\";\n\nconst PostUpdate = () => {\n  const [loading, setLoading] = useState(false);\n  const [categories, setCategories] = useState([]);\n  const [params] = useSearchParams();\n  const postId = params.get(\"id\");\n  const {\n    control,\n    setValue,\n    watch,\n    reset,\n    getValues,\n    handleSubmit,\n    formState: { isValid, isSubmitting },\n  } = useForm({\n    mode: \"onChange\",\n  });\n  const imageUrl = getValues(\"image\");\n  const imageName = getValues(\"image_name\");\n  const { image, setImage, progress, handleSelectImage, handleDeleteImage } =\n    useFirebaseImage(setValue, getValues, imageName, deletePostImage);\n  async function deletePostImage() {\n    const colRef = doc(db, \"users\", postId);\n    await updateDoc(colRef, {\n      image: \"\",\n    });\n  }\n  useEffect(() => {\n    setImage(imageUrl);\n  }, [imageUrl, setImage]);\n  const updatePostHandler = (values) => {};\n  const watchHot = watch(\"hot\");\n  const watchStatus = watch(\"status\");\n\n  useEffect(() => {\n    async function fetchData() {\n      if (!postId) return;\n      const docRef = doc(db, \"posts\", postId);\n      const docSnapshot = await getDoc(docRef);\n      if (docSnapshot.data()) {\n        reset(docSnapshot.data());\n      }\n    }\n    fetchData();\n  }, [postId, reset]);\n  useEffect(() => {\n    async function getCategoriesData() {\n      const colRef = collection(db, \"categories\");\n      const q = query(colRef, where(\"status\", \"==\", 1));\n      const querySnapshot = await getDocs(q);\n      let result = [];\n      querySnapshot.forEach((doc) => {\n        result.push({\n          id: doc.id,\n          ...doc.data(),\n        });\n      });\n      setCategories(result);\n    }\n    getCategoriesData();\n  }, []);\n  const handleClickOption = async (item) => {\n    const colRef = doc(db, \"categories\", item.id);\n    const docData = await getDoc(colRef);\n    setValue(\"category\", {\n      id: docData.id,\n      ...docData.data(),\n    });\n    setSelectCategory(item);\n  };\n  if (!postId) return null;\n  return (\n    <>\n      <DashboardHeading\n        title=\"Update post\"\n        desc=\"Update post content\"\n      ></DashboardHeading>\n      <form onSubmit={handleSubmit(updatePostHandler)}>\n        <div className=\"form-layout\">\n          <Field>\n            <Label>Title</Label>\n            <Input\n              control={control}\n              placeholder=\"Enter your title\"\n              name=\"title\"\n              required\n            ></Input>\n          </Field>\n          <Field>\n            <Label>Slug</Label>\n            <Input\n              control={control}\n              placeholder=\"Enter your slug\"\n              name=\"slug\"\n            ></Input>\n          </Field>\n        </div>\n        <div className=\"form-layout\">\n          <Field>\n            <Label>Image</Label>\n            <ImageUpload\n              onChange={handleSelectImage}\n              handleDeleteImage={handleDeleteImage}\n              className=\"h-[250px]\"\n              progress={progress}\n              image={image}\n            ></ImageUpload>\n          </Field>\n          <Field>\n            <Label>Category</Label>\n            <Dropdown>\n              <Dropdown.Select placeholder=\"Select the category\"></Dropdown.Select>\n              <Dropdown.List>\n                {categories.length > 0 &&\n                  categories.map((item) => (\n                    <Dropdown.Option\n                      key={item.id}\n                      onClick={() => handleClickOption(item)}\n                    >\n                      {item.name}\n                    </Dropdown.Option>\n                  ))}\n              </Dropdown.List>\n            </Dropdown>\n            {/* {selectCategory?.name && (\n              <span className=\"inline-block p-3 rounded-lg bg-green-50 text-sm text-green-600 font-medium\">\n                {selectCategory?.name}\n              </span>\n            )} */}\n          </Field>\n        </div>\n        <div className=\"form-layout\">\n          <Field>\n            <Label>Feature post</Label>\n            <Toggle\n              on={watchHot === true}\n              onClick={() => setValue(\"hot\", !watchHot)}\n            ></Toggle>\n          </Field>\n          <Field>\n            <Label>Status</Label>\n            <FieldCheckboxes>\n              <Radio\n                name=\"status\"\n                control={control}\n                checked={Number(watchStatus) === postStatus.APPROVED}\n                value={postStatus.APPROVED}\n              >\n                Approved\n              </Radio>\n              <Radio\n                name=\"status\"\n                control={control}\n                checked={Number(watchStatus) === postStatus.PENDING}\n                value={postStatus.PENDING}\n              >\n                Pending\n              </Radio>\n              <Radio\n                name=\"status\"\n                control={control}\n                checked={Number(watchStatus) === postStatus.REJECTED}\n                value={postStatus.REJECTED}\n              >\n                Reject\n              </Radio>\n            </FieldCheckboxes>\n          </Field>\n        </div>\n        <Button\n          type=\"submit\"\n          className=\"mx-auto w-[250px]\"\n          isLoading={loading}\n          disabled={loading}\n        >\n          Update\n        </Button>\n      </form>\n    </>\n  );\n};\n\nexport default PostUpdate;\n"]},"metadata":{},"sourceType":"module"}
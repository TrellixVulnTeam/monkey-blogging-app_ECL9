{"ast":null,"code":"var _jsxFileName = \"E:\\\\KTCity\\\\react-course-project\\\\react-monkey-blogging\\\\src\\\\pages\\\\SignInPage.js\",\n    _s = $RefreshSig$();\n\nimport { Button } from \"components/button\";\nimport { Field } from \"components/field\";\nimport { Input } from \"components/input\";\nimport { Label } from \"components/label\";\nimport { useAuth } from \"contexts/auth-context\";\nimport React, { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport AuthenticationPage from \"./AuthenticationPage\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { toast } from \"react-toastify\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from \"firebase-app/firebase-config\";\nimport InputPasswordToggle from \"components/input/InputPasswordToggle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object({\n  email: yup.string().email(\"Please enter valid email address\").required(\"Please enter your email address\"),\n  password: yup.string().min(8, \"Your password must be at least 8 characters or greater\").required(\"Please enter your password\")\n});\n\nconst SignInPage = () => {\n  _s();\n\n  const {\n    handleSubmit,\n    control,\n    formState: {\n      isValid,\n      isSubmitting,\n      errors\n    }\n  } = useForm({\n    mode: \"onChange\",\n    resolver: yupResolver(schema)\n  });\n  useEffect(() => {\n    const arrErroes = Object.values(errors);\n\n    if (arrErroes.length > 0) {\n      var _arrErroes$;\n\n      toast.error((_arrErroes$ = arrErroes[0]) === null || _arrErroes$ === void 0 ? void 0 : _arrErroes$.message, {\n        pauseOnHover: false,\n        delay: 0\n      });\n    }\n  }, [errors]);\n  const {\n    userInfo\n  } = useAuth();\n  const navigate = useNavigate();\n  useEffect(() => {\n    document.title = \"Login Page\";\n    if (userInfo !== null && userInfo !== void 0 && userInfo.email) navigate(\"/\"); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [userInfo]);\n\n  const handleSignIn = async values => {\n    if (!isValid) return;\n\n    try {\n      await signInWithEmailAndPassword(auth, values.email, values.password);\n      navigate(\"/\");\n    } catch (error) {\n      if (error.message.includes(\"wrong-password\")) toast.error(\"It seems your password was wrong\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthenticationPage, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleSubmit(handleSignIn),\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"email\",\n          children: \"Email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Enter your email address\",\n          control: control\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputPasswordToggle, {\n          control: control\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"have-account\",\n        children: [\"You have not had an account?\", \" \", /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/sign-up\",\n          children: \"Register an account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        className: \"w-full max-w-[300px] mx-auto\",\n        isLoading: isSubmitting,\n        disabled: isSubmitting,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignInPage, \"Am3ey80EgLi5G4/YUFERkDZFHjQ=\", false, function () {\n  return [useForm, useAuth, useNavigate];\n});\n\n_c = SignInPage;\nexport default SignInPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignInPage\");","map":{"version":3,"sources":["E:/KTCity/react-course-project/react-monkey-blogging/src/pages/SignInPage.js"],"names":["Button","Field","Input","Label","useAuth","React","useEffect","useForm","NavLink","useNavigate","AuthenticationPage","yup","yupResolver","toast","signInWithEmailAndPassword","auth","InputPasswordToggle","schema","object","email","string","required","password","min","SignInPage","handleSubmit","control","formState","isValid","isSubmitting","errors","mode","resolver","arrErroes","Object","values","length","error","message","pauseOnHover","delay","userInfo","navigate","document","title","handleSignIn","includes"],"mappings":"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","sourcesContent":["import { Button } from \"components/button\";\nimport { Field } from \"components/field\";\nimport { Input } from \"components/input\";\nimport { Label } from \"components/label\";\nimport { useAuth } from \"contexts/auth-context\";\nimport React, { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport AuthenticationPage from \"./AuthenticationPage\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { toast } from \"react-toastify\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from \"firebase-app/firebase-config\";\nimport InputPasswordToggle from \"components/input/InputPasswordToggle\";\n\nconst schema = yup.object({\n  email: yup\n    .string()\n    .email(\"Please enter valid email address\")\n    .required(\"Please enter your email address\"),\n  password: yup\n    .string()\n    .min(8, \"Your password must be at least 8 characters or greater\")\n    .required(\"Please enter your password\"),\n});\nconst SignInPage = () => {\n  const {\n    handleSubmit,\n    control,\n    formState: { isValid, isSubmitting, errors },\n  } = useForm({\n    mode: \"onChange\",\n    resolver: yupResolver(schema),\n  });\n  useEffect(() => {\n    const arrErroes = Object.values(errors);\n    if (arrErroes.length > 0) {\n      toast.error(arrErroes[0]?.message, {\n        pauseOnHover: false,\n        delay: 0,\n      });\n    }\n  }, [errors]);\n  const { userInfo } = useAuth();\n  const navigate = useNavigate();\n  useEffect(() => {\n    document.title = \"Login Page\";\n    if (userInfo?.email) navigate(\"/\");\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [userInfo]);\n  const handleSignIn = async (values) => {\n    if (!isValid) return;\n    try {\n      await signInWithEmailAndPassword(auth, values.email, values.password);\n      navigate(\"/\");\n    } catch (error) {\n      if (error.message.includes(\"wrong-password\"))\n        toast.error(\"It seems your password was wrong\");\n    }\n  };\n\n  return (\n    <AuthenticationPage>\n      <form\n        className=\"form\"\n        onSubmit={handleSubmit(handleSignIn)}\n        autoComplete=\"off\"\n      >\n        <Field>\n          <Label htmlFor=\"email\">Email address</Label>\n          <Input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Enter your email address\"\n            control={control}\n          ></Input>\n        </Field>\n        <Field>\n          <Label htmlFor=\"password\">Password</Label>\n          <InputPasswordToggle control={control}></InputPasswordToggle>\n        </Field>\n        <div className=\"have-account\">\n          You have not had an account?{\" \"}\n          <NavLink to={\"/sign-up\"}>Register an account</NavLink>{\" \"}\n        </div>\n        <Button\n          type=\"submit\"\n          className=\"w-full max-w-[300px] mx-auto\"\n          isLoading={isSubmitting}\n          disabled={isSubmitting}\n        >\n          Login\n        </Button>\n      </form>\n    </AuthenticationPage>\n  );\n};\n\nexport default SignInPage;\n"]},"metadata":{},"sourceType":"module"}
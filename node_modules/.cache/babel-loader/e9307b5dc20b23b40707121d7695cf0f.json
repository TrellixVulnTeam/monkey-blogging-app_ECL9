{"ast":null,"code":"var _jsxFileName = \"E:\\\\KTCity\\\\react-course-project\\\\react-monkey-blogging\\\\src\\\\contexts\\\\auth-context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { auth } from \"firebase-app/firebase-config\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  createContext,\n  useContext,\n  useState,\n  useEffect\n} = require(\"react\");\n\nconst AuthContext = createContext();\n\nfunction AuthProvider(props) {\n  _s();\n\n  const [userInfo, setUserInfo] = useState({});\n  const value = {\n    userInfo,\n    setUserInfo\n  };\n  useEffect(() => {\n    onAuthStateChanged(auth, user => {\n      setUserInfo(user);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 10\n  }, this);\n}\n\n_s(AuthProvider, \"VIh6epXp38Cvo5M0hHpMCn8+NUU=\");\n\n_c = AuthProvider;\n\nfunction useAuth() {\n  _s2();\n\n  const context = useContext(AuthContext);\n  if (typeof context === \"undefined\") throw new Error(\"useAuth must be used within AuthProvider\");\n  return context;\n}\n\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport { AuthProvider, useAuth };\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["E:/KTCity/react-course-project/react-monkey-blogging/src/contexts/auth-context.js"],"names":["auth","onAuthStateChanged","useNavigate","createContext","useContext","useState","useEffect","require","AuthContext","AuthProvider","props","userInfo","setUserInfo","value","user","useAuth","context","Error"],"mappings":";;;;AAAA,SAASA,IAAT,QAAqB,8BAArB;AACA,SAASC,kBAAT,QAAmC,eAAnC;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;AAEA,MAAM;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA,UAAjB;AAA6BC,EAAAA,QAA7B;AAAuCC,EAAAA;AAAvC,IAAqDC,OAAO,CAAC,OAAD,CAAlE;;AAEA,MAAMC,WAAW,GAAGL,aAAa,EAAjC;;AACA,SAASM,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC3B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMQ,KAAK,GAAG;AAAEF,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAd;AACAN,EAAAA,SAAS,CAAC,MAAM;AACdL,IAAAA,kBAAkB,CAACD,IAAD,EAAQc,IAAD,IAAU;AACjCF,MAAAA,WAAW,CAACE,IAAD,CAAX;AACD,KAFiB,CAAlB;AAGD,GAJQ,EAIN,EAJM,CAAT;AAKA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAED,KAA7B;AAAA,OAAwCH;AAAxC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GATQD,Y;;KAAAA,Y;;AAUT,SAASM,OAAT,GAAmB;AAAA;;AACjB,QAAMC,OAAO,GAAGZ,UAAU,CAACI,WAAD,CAA1B;AACA,MAAI,OAAOQ,OAAP,KAAmB,WAAvB,EACE,MAAM,IAAIC,KAAJ,CAAU,0CAAV,CAAN;AACF,SAAOD,OAAP;AACD;;IALQD,O;;AAMT,SAASN,YAAT,EAAuBM,OAAvB","sourcesContent":["import { auth } from \"firebase-app/firebase-config\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst { createContext, useContext, useState, useEffect } = require(\"react\");\n\nconst AuthContext = createContext();\nfunction AuthProvider(props) {\n  const [userInfo, setUserInfo] = useState({});\n  const value = { userInfo, setUserInfo };\n  useEffect(() => {\n    onAuthStateChanged(auth, (user) => {\n      setUserInfo(user);\n    });\n  }, []);\n  return <AuthContext.Provider value={value} {...props}></AuthContext.Provider>;\n}\nfunction useAuth() {\n  const context = useContext(AuthContext);\n  if (typeof context === \"undefined\")\n    throw new Error(\"useAuth must be used within AuthProvider\");\n  return context;\n}\nexport { AuthProvider, useAuth };\n"]},"metadata":{},"sourceType":"module"}
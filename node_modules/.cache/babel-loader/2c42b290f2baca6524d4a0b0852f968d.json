{"ast":null,"code":"var _jsxFileName = \"E:\\\\KTCity\\\\react-course-project\\\\react-monkey-blogging\\\\src\\\\pages\\\\PostDetailsPage.js\",\n    _s = $RefreshSig$();\n\nimport styled from \"styled-components\";\nimport React, { useEffect, useState } from \"react\";\nimport PostRelated from \"module/post/PostRelated\";\nimport PostMeta from \"module/post/PostMeta\";\nimport PostImage from \"module/post/PostImage\";\nimport PostCategory from \"module/post/PostCategory\";\nimport parse from \"html-react-parser\";\nimport PageNotFound from \"./PageNotFound\";\nimport Layout from \"components/layout/Layout\";\nimport AuthorPost from \"components/author/AuthorPost\";\nimport { useParams } from \"react-router-dom\";\nimport { db } from \"firebase-app/firebase-config\";\nimport { collection, onSnapshot, query, where } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostDetailsPageStyles = styled.div`\n  padding-bottom: 100px;\n  .post {\n    &-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      gap: 40px;\n      margin: 40px 0;\n    }\n    &-feature {\n      width: 100%;\n      max-width: 640px;\n      height: 466px;\n      border-radius: 20px;\n    }\n    &-heading {\n      font-weight: bold;\n      font-size: 36px;\n      margin-bottom: 16px;\n    }\n    &-info {\n      flex: 1;\n    }\n    &-content {\n      max-width: 700px;\n      margin: 80px auto;\n    }\n  }\n  .author {\n    margin-top: 40px;\n    margin-bottom: 80px;\n    display: flex;\n    border-radius: 20px;\n    background-color: ${props => props.theme.grayF3};\n    &-image {\n      width: 200px;\n      height: 200px;\n      flex-shrink: 0;\n      border-radius: inherit;\n    }\n    &-image img {\n      width: 100%;\n      height: 100%;\n      object-fit: cover;\n      border-radius: inherit;\n    }\n    &-content {\n      flex: 1;\n      padding: 20px;\n    }\n    &-name {\n      font-weight: bold;\n      margin-bottom: 10px;\n      font-size: 20px;\n    }\n    &-desc {\n      font-size: 14px;\n      line-height: 2;\n    }\n  }\n  @media screen and (max-width: 1023.98px) {\n    padding-bottom: 40px;\n    .post {\n      &-header {\n        flex-direction: column;\n      }\n      &-feature {\n        height: auto;\n      }\n      &-heading {\n        font-size: 26px;\n      }\n      &-content {\n        margin: 40px 0;\n      }\n    }\n    .author {\n      flex-direction: column;\n      &-image {\n        width: 100%;\n        height: auto;\n      }\n    }\n  }\n`;\n_c = PostDetailsPageStyles;\n\nconst PostDetailsPage = () => {\n  _s();\n\n  var _postInfo$createdAt, _postInfo$createdAt2, _postInfo$category;\n\n  const {\n    slug\n  } = useParams();\n  const [postInfo, setPostInfo] = useState({});\n  useEffect(() => {\n    async function fetchData() {\n      if (!slug) return;\n      const colRef = query(collection(db, \"posts\"), where(\"slug\", \"==\", slug));\n      onSnapshot(colRef, snapshot => {\n        snapshot.forEach(doc => {\n          doc.data() && setPostInfo(doc.data());\n        });\n      });\n    }\n\n    fetchData();\n  }, [slug]);\n  useEffect(() => {\n    document.body.scrollIntoView({\n      behavior: \"smooth\",\n      block: \"start\"\n    });\n  }, [slug]);\n  const date = postInfo !== null && postInfo !== void 0 && (_postInfo$createdAt = postInfo.createdAt) !== null && _postInfo$createdAt !== void 0 && _postInfo$createdAt.seconds ? new Date((postInfo === null || postInfo === void 0 ? void 0 : (_postInfo$createdAt2 = postInfo.createdAt) === null || _postInfo$createdAt2 === void 0 ? void 0 : _postInfo$createdAt2.seconds) * 1000) : new Date();\n  const formatDate = new Date(date).toLocaleDateString(\"vi-VI\");\n  if (!slug) return /*#__PURE__*/_jsxDEV(PageNotFound, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 21\n  }, this);\n  if (!postInfo.title) return null;\n  if (!postInfo.title) return null;\n  const {\n    user\n  } = postInfo;\n  return /*#__PURE__*/_jsxDEV(PostDetailsPageStyles, {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-header\",\n          children: [/*#__PURE__*/_jsxDEV(PostImage, {\n            url: postInfo.image,\n            className: \"post-feature\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-info\",\n            children: [/*#__PURE__*/_jsxDEV(PostCategory, {\n              className: \"mb-6\",\n              children: (_postInfo$category = postInfo.category) === null || _postInfo$category === void 0 ? void 0 : _postInfo$category.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"post-heading\",\n              children: postInfo.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(PostMeta, {\n              authorName: user === null || user === void 0 ? void 0 : user.fullname,\n              date: formatDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"entry-content\",\n            children: parse(postInfo.content || \"\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AuthorPost, {\n            userId: user.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PostRelated, {\n          categoryId: postInfo === null || postInfo === void 0 ? void 0 : postInfo.categoryId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostDetailsPage, \"iua0LdZQLtIJpIpiZXBQBgoHoLI=\", false, function () {\n  return [useParams];\n});\n\n_c2 = PostDetailsPage;\nexport default PostDetailsPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PostDetailsPageStyles\");\n$RefreshReg$(_c2, \"PostDetailsPage\");","map":{"version":3,"sources":["E:/KTCity/react-course-project/react-monkey-blogging/src/pages/PostDetailsPage.js"],"names":["styled","React","useEffect","useState","PostRelated","PostMeta","PostImage","PostCategory","parse","PageNotFound","Layout","AuthorPost","useParams","db","collection","onSnapshot","query","where","PostDetailsPageStyles","div","props","theme","grayF3","PostDetailsPage","slug","postInfo","setPostInfo","fetchData","colRef","snapshot","forEach","doc","data","document","body","scrollIntoView","behavior","block","date","createdAt","seconds","Date","formatDate","toLocaleDateString","title","user","image","category","name","fullname","content","id","categoryId"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,EAAT,QAAmB,8BAAnB;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,KAAjC,EAAwCC,KAAxC,QAAqD,oBAArD;;AACA,MAAMC,qBAAqB,GAAGlB,MAAM,CAACmB,GAAI;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAyBC,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,MAAO;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CArFA;KAAMJ,qB;;AAuFN,MAAMK,eAAe,GAAG,MAAM;AAAA;;AAAA;;AAC5B,QAAM;AAAEC,IAAAA;AAAF,MAAWZ,SAAS,EAA1B;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0BvB,QAAQ,CAAC,EAAD,CAAxC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeyB,SAAf,GAA2B;AACzB,UAAI,CAACH,IAAL,EAAW;A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","sourcesContent":["import styled from \"styled-components\";\nimport React, { useEffect, useState } from \"react\";\nimport PostRelated from \"module/post/PostRelated\";\nimport PostMeta from \"module/post/PostMeta\";\nimport PostImage from \"module/post/PostImage\";\nimport PostCategory from \"module/post/PostCategory\";\nimport parse from \"html-react-parser\";\nimport PageNotFound from \"./PageNotFound\";\nimport Layout from \"components/layout/Layout\";\nimport AuthorPost from \"components/author/AuthorPost\";\nimport { useParams } from \"react-router-dom\";\nimport { db } from \"firebase-app/firebase-config\";\nimport { collection, onSnapshot, query, where } from \"firebase/firestore\";\nconst PostDetailsPageStyles = styled.div`\n  padding-bottom: 100px;\n  .post {\n    &-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      gap: 40px;\n      margin: 40px 0;\n    }\n    &-feature {\n      width: 100%;\n      max-width: 640px;\n      height: 466px;\n      border-radius: 20px;\n    }\n    &-heading {\n      font-weight: bold;\n      font-size: 36px;\n      margin-bottom: 16px;\n    }\n    &-info {\n      flex: 1;\n    }\n    &-content {\n      max-width: 700px;\n      margin: 80px auto;\n    }\n  }\n  .author {\n    margin-top: 40px;\n    margin-bottom: 80px;\n    display: flex;\n    border-radius: 20px;\n    background-color: ${(props) => props.theme.grayF3};\n    &-image {\n      width: 200px;\n      height: 200px;\n      flex-shrink: 0;\n      border-radius: inherit;\n    }\n    &-image img {\n      width: 100%;\n      height: 100%;\n      object-fit: cover;\n      border-radius: inherit;\n    }\n    &-content {\n      flex: 1;\n      padding: 20px;\n    }\n    &-name {\n      font-weight: bold;\n      margin-bottom: 10px;\n      font-size: 20px;\n    }\n    &-desc {\n      font-size: 14px;\n      line-height: 2;\n    }\n  }\n  @media screen and (max-width: 1023.98px) {\n    padding-bottom: 40px;\n    .post {\n      &-header {\n        flex-direction: column;\n      }\n      &-feature {\n        height: auto;\n      }\n      &-heading {\n        font-size: 26px;\n      }\n      &-content {\n        margin: 40px 0;\n      }\n    }\n    .author {\n      flex-direction: column;\n      &-image {\n        width: 100%;\n        height: auto;\n      }\n    }\n  }\n`;\n\nconst PostDetailsPage = () => {\n  const { slug } = useParams();\n  const [postInfo, setPostInfo] = useState({});\n  useEffect(() => {\n    async function fetchData() {\n      if (!slug) return;\n      const colRef = query(collection(db, \"posts\"), where(\"slug\", \"==\", slug));\n      onSnapshot(colRef, (snapshot) => {\n        snapshot.forEach((doc) => {\n          doc.data() && setPostInfo(doc.data());\n        });\n      });\n    }\n    fetchData();\n  }, [slug]);\n  useEffect(() => {\n    document.body.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\n  }, [slug]);\n  const date = postInfo?.createdAt?.seconds\n    ? new Date(postInfo?.createdAt?.seconds * 1000)\n    : new Date();\n  const formatDate = new Date(date).toLocaleDateString(\"vi-VI\");\n  if (!slug) return <PageNotFound></PageNotFound>;\n  if (!postInfo.title) return null;\n  if (!postInfo.title) return null;\n  const { user } = postInfo;\n\n  return (\n    <PostDetailsPageStyles>\n      <Layout>\n        <div className=\"container\">\n          <div className=\"post-header\">\n            <PostImage\n              url={postInfo.image}\n              className=\"post-feature\"\n            ></PostImage>\n            <div className=\"post-info\">\n              <PostCategory className=\"mb-6\">\n                {postInfo.category?.name}\n              </PostCategory>\n              <h1 className=\"post-heading\">{postInfo.title}</h1>\n              <PostMeta\n                authorName={user?.fullname}\n                date={formatDate}\n              ></PostMeta>\n            </div>\n          </div>\n          <div className=\"post-content\">\n            <div className=\"entry-content\">{parse(postInfo.content || \"\")}</div>\n            <AuthorPost userId={user.id}></AuthorPost>\n          </div>\n          <PostRelated categoryId={postInfo?.categoryId}></PostRelated>\n        </div>\n      </Layout>\n    </PostDetailsPageStyles>\n  );\n};\n\nexport default PostDetailsPage;\n"]},"metadata":{},"sourceType":"module"}